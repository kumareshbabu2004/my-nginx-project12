name: Build, Push, Deploy Locally with Rollback

on:
  push:
    branches: [ main, master ]

jobs:
  build:
    name: üõ†Ô∏è Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/my-nginx-app:latest .

      - name: Save Docker Image as Tarball
        run: docker save ${{ secrets.DOCKER_USERNAME }}/my-nginx-app:latest -o my-nginx-app.tar

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: my-nginx-app.tar

  push:
    name: üì¶ Push to Docker Hub
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker Image
        run: docker load -i my-nginx-app.tar

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/my-nginx-app:latest

  deploy:
    name: üöÄ Deploy Locally
    needs: push
    runs-on: self-hosted

    steps:
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Pull and Run Latest Image
        run: |
          echo "Pulling latest image..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/my-nginx-app:latest

          echo "Stopping and removing current container if exists..."
          docker stop myapp || true
          docker rm myapp || true

          echo "Running new container on port 81..."
          docker run -d --name myapp -p 81:80 ${{ secrets.DOCKER_USERNAME }}/my-nginx-app:latest

  rollback:
    name: üîÅ Rollback on Failure
    needs: deploy
    if: failure()
    runs-on: self-hosted

    steps:
      - name: Rollback to Previous Version
        run: |
          echo "Deployment failed. Rolling back..."
          docker stop myapp || true
          docker rm myapp || true
          docker run -d --name myapp -p 81:80 ${{ secrets.DOCKER_USERNAME }}/my-nginx-app:rollback
