name: Build, Push, Deploy with Rollback and Email Notifications

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      rollback:
        description: 'Do rollback? (true/false)'
        required: false
        default: 'false'
      rollback_version:
        description: 'Rollback version (e.g. v1.5)'
        required: false
        default: ''

env:
  DOCKER_IMAGE: kumaresh11/nginx-pipeline
  GMAIL_USER: rgkumar1233@gmail.com
  TO_EMAIL: rgkumar1233@gmail.com

jobs:
  build_and_push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set Docker image version
        id: set_version
        run: |
          VERSION="v1.${{ github.run_number }}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t $DOCKER_IMAGE:${{ steps.set_version.outputs.version }} .

      - name: Push Docker Image
        run: docker push $DOCKER_IMAGE:${{ steps.set_version.outputs.version }}

  deploy:
    name: Deploy Docker Container
    needs: build_and_push
    runs-on: self-hosted
    steps:
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Stop and Remove Existing Container
        run: |
          docker stop nginx-container || true
          docker rm nginx-container || true

      - name: Run New Container
        run: docker run -d --name nginx-container -p 80:80 $DOCKER_IMAGE:${{ needs.build_and_push.outputs.version }}

  rollback:
    name: Rollback Docker Container (Manual)
    runs-on: self-hosted
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.rollback == 'true'
    steps:
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Rollback to Specified Version
        run: |
          if [ -z "${{ github.event.inputs.rollback_version }}" ]; then
            echo "Rollback version not specified. Exiting."
            exit 1
          fi
          echo "Rolling back to version: ${{ github.event.inputs.rollback_version }}"
          docker stop nginx-container || true
          docker rm nginx-container || true
          docker run -d --name nginx-container -p 80:80 $DOCKER_IMAGE:${{ github.event.inputs.rollback_version }}

  notify:
    name: Send Email Notification
    needs: [build_and_push, deploy]
    runs-on: ubuntu-latest
    if: always()
    env:
      GMAIL_USER: ${{ secrets.GMAIL_USER }}
      GMAIL_PASS: ${{ secrets.GMAIL_PASS }}
      TO_EMAIL: ${{ env.TO_EMAIL }}
    steps:
      - name: Prepare email content
        run: |
          STATUS="SUCCESS"
          if [[ "${{ job.status }}" != "success" ]]; then
            STATUS="FAILURE"
          fi
          SUBJECT="GitHub Actions $STATUS: ${{ github.workflow }} #${{ github.run_number }}"
          BODY="$STATUS: Workflow run for ${{ github.repository }} at commit ${{ github.sha }}.
Version: ${{ needs.build_and_push.outputs.version }}
Run URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          echo -e "Subject: $SUBJECT\nTo: $TO_EMAIL\n\n$BODY" > mail.txt

      - name: Send email via Gmail SMTP
        run: |
          curl --url "smtps://smtp.gmail.com:465" --ssl-reqd \
            --mail-from "$GMAIL_USER" \
            --mail-rcpt "$TO_EMAIL" \
            --upload-file mail.txt \
            --user "$GMAIL_USER:$GMAIL_PASS" \
            --insecure
