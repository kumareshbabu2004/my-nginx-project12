name: Build, Push, Deploy with Versioning and Email Notification

on:
  push:
    branches: [main]

env:
  DOCKER_IMAGE: your-dockerhub-username/my-nginx-app
  GMAIL_USER: yourgmail@gmail.com
  TO_EMAIL: yourgmail@gmail.com

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Docker Image Version
        id: set_version
        run: |
          VERSION="v1.${{ github.run_number }}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t $DOCKER_IMAGE:${{ steps.set_version.outputs.version }} .

      - name: Push Docker Image
        run: docker push $DOCKER_IMAGE:${{ steps.set_version.outputs.version }}

  deploy:
    needs: build_and_push
    runs-on: self-hosted

    steps:
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Stop old container if exists
        run: |
          docker stop my-nginx-container || true
          docker rm my-nginx-container || true

      - name: Run new container
        run: docker run -d --name my-nginx-container -p 80:80 $DOCKER_IMAGE:${{ needs.build_and_push.outputs.version }}

  notify:
    needs: [build_and_push, deploy]
    runs-on: ubuntu-latest
    if: always()
    env:
      GMAIL_USER: ${{ secrets.GMAIL_USER }}
      GMAIL_PASS: ${{ secrets.GMAIL_PASS }}
      TO_EMAIL: ${{ env.TO_EMAIL }}
    steps:
      - name: Prepare Email Content
        run: |
          STATUS="SUCCESS"
          if [[ "${{ job.status }}" != "success" ]]; then
            STATUS="FAILURE"
          fi
          SUBJECT="GitHub Actions $STATUS: ${{ github.workflow }} #${{ github.run_number }}"
          BODY="$STATUS: Workflow run for ${{ github.repository }} at commit ${{ github.sha }}.
Version: ${{ needs.build_and_push.outputs.version }}
Run URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          echo -e "Subject: $SUBJECT\nTo: $TO_EMAIL\n\n$BODY" > mail.txt

      - name: Send Email via Gmail SMTP
        run: |
          curl --url "smtps://smtp.gmail.com:465" --ssl-reqd \
            --mail-from "$GMAIL_USER" \
            --mail-rcpt "$TO_EMAIL" \
            --upload-file mail.txt \
            --user "$GMAIL_USER:$GMAIL_PASS" \
            --insecure
